React Events

Just like HTML, React can perform actions based on user events.
React has the same events as HTML: click, change, mouseover etc.


Adding Events
React events are written in camelCase syntax:

onClick instead of onclick.

React event handlers are written inside curly braces:

onClick={shoot}  instead of onClick="shoot()".


Event handlers

A good practice is to put the event handler as a method in the component:


Bind this

For methods in React, the this keyword should represent the component that owns the method.

That is why you should use arrow functions. With arrow functions, this will always represent
the object that defined the arrow function.


Why Arrow Functions?
In class components, the this keyword is not defined by default, so with regular functions the this
keyword represents the object that called the method, which can be the global window object, a HTML
button, or whatever.

If you must use regular functions instead of arrow functions you have to bind this to the component
instance using the bind() method:

Note: Without the binding, the this keyword would return undefined.


Passing Arguments
If you want to send parameters into an event handler, you have two options:

1. Make an anonymous arrow function:

Or:

2. Bind the event handler to this.

Note that the first argument has to be this.



React Event Object

Event handlers have access to the React event that triggered the function.

In our example the event is the "click" event. Notice that once again the syntax is different when using arrow functions or not.

With the arrow function you have to send the event argument manually:

